import 'package:flutter/material.dart';

//what is the difference between expansion panel and expansion tile


/*| ‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø          | **ExpansionPanel**                                                | **ExpansionTile**                              |
| ------------------ | ----------------------------------------------------------------- | ---------------------------------------------- |
| ‚úÖ UI Control       | ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶á‡¶ú‡ßá‡¶∂‡¶® ‡¶¨‡ßá‡¶∂‡¶ø, ‡¶ú‡¶ü‡¶ø‡¶≤ UI ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü                                | ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£/simple UI-‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶≠‡¶æ‡¶≤‡ßã                   |
| üéØ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞ | Complex list, card-style UI, FAQ systems, form sections           | Simple lists, sidebar, settings menu           |
| üîÑ Multiple expand | Multiple panel ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá expand ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶è‡¶ï‡¶ü‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ         | ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£‡¶§ ‡¶è‡¶ï‡¶ü‡¶æ tile-‡¶á expand ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü              |
| üé® UI Layout       | Card style layout, `ExpansionPanelList` ‡¶è‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶§‡ßá ‡¶π‡ßü         | Simple ListTile ‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶¶‡ßá‡¶ñ‡¶§‡ßá                   |
| üîß Flexibility     | Header ‡¶ì Body ‡¶™‡ßÅ‡¶∞‡ßã custom ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü                                 | Header fixed layout (leading, title, subtitle) |
| üì¶ Use Case        | ‡¶Ø‡¶¶‡¶ø ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï panel manage ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶ì ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá, toggle/animation ‡¶∏‡¶π | ‡¶Ø‡¶¶‡¶ø UI ‡¶∏‡¶π‡¶ú ‡¶ì ‡¶ñ‡ßÅ‡¶¨ customizable ‡¶®‡¶æ ‡¶π‡ßü            |*/


class ExpansionPanelWidget extends StatefulWidget {
  const ExpansionPanelWidget({super.key});

  @override
  State<ExpansionPanelWidget> createState() => _ExpansionPanelWidgetState();
}

class _ExpansionPanelWidgetState extends State<ExpansionPanelWidget> {
  bool isActive = false;
  String headerTitle = "Show Country Name";

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text("Expansion Panel Widget"),
        ),
        body: Column(
          children: [
            ExpansionPanelList(
              dividerColor: Colors.red,
                expandIconColor: Colors.yellowAccent,
                expansionCallback: (panelIndex, isExpanded) {
                  isActive = !isActive;
                  isActive ? headerTitle : "Country List";
                  setState(() {});
                },
                children: [
                  ExpansionPanel(
                    highlightColor: Colors.amber,
                    backgroundColor: Colors.green,
                      headerBuilder: (context, isExpanded) {
                        return Center(
                          child: Text(
                            headerTitle,
                            style: const TextStyle(
                                fontWeight: FontWeight.bold, fontSize: 15,color: Colors.white),
                          ),
                        );
                      },
                      body: Wrap(
                        alignment: WrapAlignment.spaceBetween,
                        children: [
                          ElevatedButton(
                            style: ButtonStyle(
                              backgroundColor:
                                  WidgetStateProperty.resolveWith<Color>(
                                (Set<WidgetState> states) {
                                  if (states.contains(WidgetState.pressed)) {
                                    return Colors.green;
                                  }
                                  return Colors.black;
                                },
                              ),
                            ),
                            onPressed: () => null,
                            child: Text("Bangladesh"),
                          ),
                          ElevatedButton(
                            style: ButtonStyle(
                              backgroundColor:
                                  WidgetStateProperty.resolveWith<Color>(
                                (Set<WidgetState> states) {
                                  if (states.contains(WidgetState.pressed)) {
                                    return Colors.green;
                                  }
                                  return Colors.black;
                                },
                              ),
                            ),
                            onPressed: () => null,
                            child: Text("India"),
                          ),
                          ElevatedButton(
                            style: ButtonStyle(
                              backgroundColor:
                                  WidgetStateProperty.resolveWith<Color>(
                                (Set<WidgetState> states) {
                                  if (states.contains(WidgetState.pressed)) {
                                    return Colors.green;
                                  }
                                  return Colors.black;
                                },
                              ),
                            ),
                            onPressed: () => null,
                            child: Text("Pakistan"),
                          ),
                          ElevatedButton(
                            style: ButtonStyle(
                              backgroundColor:
                                  WidgetStateProperty.resolveWith<Color>(
                                (Set<WidgetState> states) {
                                  if (states.contains(WidgetState.pressed)) {
                                    return Colors.green;
                                  }
                                  return Colors.black;
                                },
                              ),
                            ),
                            onPressed: () => null,
                            child: Text("Nepal"),
                          ),
                          ElevatedButton(
                            style: ButtonStyle(
                              backgroundColor:
                                  WidgetStateProperty.resolveWith<Color>(
                                (Set<WidgetState> states) {
                                  if (states.contains(WidgetState.pressed)) {
                                    return Colors.green;
                                  }
                                  return Colors.black;
                                },
                              ),
                            ),
                            onPressed: () => null,
                            child: Text("Bhutan"),
                          ),
                        ],
                      ),
                      isExpanded: isActive,
                      canTapOnHeader: true)
                ]),
            ExpansionPanelList(
              dividerColor: Colors.red,
                expandIconColor: Colors.yellowAccent,
                expansionCallback: (panelIndex, isExpanded) {
                  isActive = !isActive;
                  isActive ? headerTitle : "Country List";
                  setState(() {});
                },
                children: [
                  ExpansionPanel(
                    highlightColor: Colors.amber,
                    backgroundColor: Colors.green,
                      headerBuilder: (context, isExpanded) {
                        return Center(
                          child: Text(
                            headerTitle,
                            style: const TextStyle(
                                fontWeight: FontWeight.bold, fontSize: 15,color: Colors.white),
                          ),
                        );
                      },
                      body: Wrap(
                        alignment: WrapAlignment.spaceBetween,
                        children: [
                          ElevatedButton(
                            style: ButtonStyle(
                              backgroundColor:
                                  WidgetStateProperty.resolveWith<Color>(
                                (Set<WidgetState> states) {
                                  if (states.contains(WidgetState.pressed)) {
                                    return Colors.green;
                                  }
                                  return Colors.black;
                                },
                              ),
                            ),
                            onPressed: () => null,
                            child: Text("Bangladesh"),
                          ),
                          ElevatedButton(
                            style: ButtonStyle(
                              backgroundColor:
                                  WidgetStateProperty.resolveWith<Color>(
                                (Set<WidgetState> states) {
                                  if (states.contains(WidgetState.pressed)) {
                                    return Colors.green;
                                  }
                                  return Colors.black;
                                },
                              ),
                            ),
                            onPressed: () => null,
                            child: Text("India"),
                          ),
                          ElevatedButton(
                            style: ButtonStyle(
                              backgroundColor:
                                  WidgetStateProperty.resolveWith<Color>(
                                (Set<WidgetState> states) {
                                  if (states.contains(WidgetState.pressed)) {
                                    return Colors.green;
                                  }
                                  return Colors.black;
                                },
                              ),
                            ),
                            onPressed: () => null,
                            child: Text("Pakistan"),
                          ),
                          ElevatedButton(
                            style: ButtonStyle(
                              backgroundColor:
                                  WidgetStateProperty.resolveWith<Color>(
                                (Set<WidgetState> states) {
                                  if (states.contains(WidgetState.pressed)) {
                                    return Colors.green;
                                  }
                                  return Colors.black;
                                },
                              ),
                            ),
                            onPressed: () => null,
                            child: Text("Nepal"),
                          ),
                          ElevatedButton(
                            style: ButtonStyle(
                              backgroundColor:
                                  WidgetStateProperty.resolveWith<Color>(
                                (Set<WidgetState> states) {
                                  if (states.contains(WidgetState.pressed)) {
                                    return Colors.green;
                                  }
                                  return Colors.black;
                                },
                              ),
                            ),
                            onPressed: () => null,
                            child: Text("Bhutan"),
                          ),
                        ],
                      ),
                      isExpanded: isActive,
                      canTapOnHeader: true)
                ]),
          ],
        ));
  }
}
